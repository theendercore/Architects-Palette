plugins {
    id 'multiloader-loader'
    id 'fabric-loom' version '1.7-SNAPSHOT'
}


dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'


    modApi("fuzs.forgeconfigapiport:forgeconfigapiport-fabric:${config_port_version}")
//     compile against the JEI API but do not include it at runtime
//    modCompileOnlyApi "mezz.jei:jei-${minecraft_version}-fabric-api:${jei_version}"
//     at runtime, use the full JEI jar for Fabric
//    modRuntimeOnly "mezz.jei:jei-${minecraft_version}-fabric:${jei_version}"

    modCompileOnly "dev.emi:emi-fabric:${emi_version}:api"
    modLocalRuntime "dev.emi:emi-fabric:${emi_version}"

    modRuntimeOnly "com.terraformersmc:modmenu:11.0.1"
}


sourceSets.main.resources.srcDir '../common/src/main/generated'
loom {
    def aw = project(":common").file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("runs/client")
            programArgs("--quickPlaySingleplayer", "test")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("runs/server")
        }
        data {
            client()
            setConfigName("Fabric Data")
            ideConfigGenerated(true)
            vmArg("-Dfabric-api.datagen")
            // (ender) i will figure this out in the future :)
            vmArg("-Dfabric-api.datagen.output-dir=${file("../common/src/main/generated")}")
//            vmArg("-Dfabric-api.datagen.output-dir=${file("src/main/generated")}")
            vmArg("-Dfabric-api.datagen.modid=${mod_id}")
            runDir("runs/datagen")
        }
    }
}
